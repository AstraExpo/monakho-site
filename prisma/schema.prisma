// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  createdAt DateTime   @default(now())
  orders    Order[]
  donations Donation[]
}

model Product {
  id          String      @id @default(cuid())
  title       String
  description String?
  type        ProductType
  price       Float
  fileUrl     String?
  createdAt   DateTime    @default(now())
  orders      Order[]     @relation("OrderProducts")
}

model Order {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  products  Product[] @relation("OrderProducts")
  total     Float
  createdAt DateTime  @default(now())

  Payment Payment[]
}

model Donation {
  id        String   @id @default(cuid())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  amount    Float
  message   String?
  createdAt DateTime @default(now())

  Payment Payment[]
}

enum ProductType {
  BOOK
  AUDIO
  VIDEO
  OTHER
}

model Payment {
  id               String    @id @default(cuid())
  provider         PaymentProvider
  status           PaymentStatus @default(PENDING)
  amount           Float
  currency         String    @default("KES") // Or USD, if international
  paymentIntentId  String?   // Stripe ID, M-Pesa receipt, etc.
  errorMessage     String?
  order            Order?    @relation(fields: [orderId], references: [id])
  orderId          String?
  donation         Donation? @relation(fields: [donationId], references: [id])
  donationId       String?
  createdAt        DateTime  @default(now())
  paidAt           DateTime?
}

enum PaymentProvider {
  STRIPE
  MPESA
  PAYPAL
  MANUAL
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}
